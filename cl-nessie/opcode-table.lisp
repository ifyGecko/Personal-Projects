;;hash table of addresing modes & byte size && sign/unsigned
(defvar *format-tbl* (make-hash-table))
(setf (gethash 'ZEROX *format-tbl*) '(" (~a, X)" 1 'unsigned)) 
(setf (gethash 'ZERO *format-tbl*) '(" $~X" 1 'unsigned))
(setf (gethash 'IMM *format-tbl*) '(" #~a" 1 'unsigned))
(setf (gethash 'ABSL *format-tbl*) '(" $~X" 2 'unsigned)) 
(setf (gethash 'ZERO-Y *format-tbl*) '(" ($~X), Y" 1 'unsigned)) 
(setf (gethash 'ZERO-X *format-tbl*) '(" $~X, X" 1 'unsigned)) 
(setf (gethash 'ABSY *format-tbl*) '(" $~X, Y" 2 'unsigned))
(setf (gethash 'ABSX *format-tbl*) '(" $~X, X" 2 'unsigned))
(setf (gethash 'REL *format-tbl*) '(" *~a" 1 'signed))

;;hash table of opcodes & associated addressing mode
(defvar *instr-tbl* (make-hash-table))
(setf (gethash (parse-integer "00" :radix 16) *instr-tbl*) '("BRK"))
(setf (gethash (parse-integer "01" :radix 16) *instr-tbl*) '("ORA" ZERO-X))
(setf (gethash (parse-integer "05" :radix 16) *instr-tbl*) '("ORA" ZERO))
(setf (gethash (parse-integer "06" :radix 16) *instr-tbl*) '("ASL" ZERO))
(setf (gethash (parse-integer "08" :radix 16) *instr-tbl*) '("PHP"))
(setf (gethash (parse-integer "09" :radix 16) *instr-tbl*) '("ORA" IMM))
(setf (gethash (parse-integer "0A" :radix 16) *instr-tbl*) '("ASL"))
(setf (gethash (parse-integer "0D" :radix 16) *instr-tbl*) '("ORA" ABSL))
(setf (gethash (parse-integer "0E" :radix 16) *instr-tbl*) '("ASL" ABSL))
(setf (gethash (parse-integer "10" :radix 16) *instr-tbl*) '("BPL" REL))
(setf (gethash (parse-integer "11" :radix 16) *instr-tbl*) '("ORA" ZERO-Y))
(setf (gethash (parse-integer "15" :radix 16) *instr-tbl*) '("ORA" ZEROX))
(setf (gethash (parse-integer "16" :radix 16) *instr-tbl*) '("ASL" ZEROX))
(setf (gethash (parse-integer "18" :radix 16) *instr-tbl*) '("CLC"))
(setf (gethash (parse-integer "19" :radix 16) *instr-tbl*) '("ORA" ZERO-Y))
(setf (gethash (parse-integer "1D" :radix 16) *instr-tbl*) '("ORA" ZERO-X))
(setf (gethash (parse-integer "1E" :radix 16) *instr-tbl*) '("ASL" ZERO-X))
(setf (gethash (parse-integer "20" :radix 16) *instr-tbl*) '("JSR" ABSL))
(setf (gethash (parse-integer "21" :radix 16) *instr-tbl*) '("AND" ZEROX))
(setf (gethash (parse-integer "24" :radix 16) *instr-tbl*) '("BIT" ABSL))
(setf (gethash (parse-integer "25" :radix 16) *instr-tbl*) '("AND" ABSL))
(setf (gethash (parse-integer "26" :radix 16) *instr-tbl*) '("ROL" ABSL))
(setf (gethash (parse-integer "28" :radix 16) *instr-tbl*) '("PLP"))
(setf (gethash (parse-integer "29" :radix 16) *instr-tbl*) '("AND" IMM))
(setf (gethash (parse-integer "2A" :radix 16) *instr-tbl*) '("ROL"))
(setf (gethash (parse-integer "2C" :radix 16) *instr-tbl*) '("BIT" ABSL))
(setf (gethash (parse-integer "2D" :radix 16) *instr-tbl*) '("AND" ABSL))
(setf (gethash (parse-integer "2E" :radix 16) *instr-tbl*) '("ROL" ABSL))
(setf (gethash (parse-integer "30" :radix 16) *instr-tbl*) '("BMI" REL))
(setf (gethash (parse-integer "31" :radix 16) *instr-tbl*) '("AND" ZERO-Y))
(setf (gethash (parse-integer "35" :radix 16) *instr-tbl*) '("AND" ZERO-X))
(setf (gethash (parse-integer "36" :radix 16) *instr-tbl*) '("ROL" ZERO-X))
(setf (gethash (parse-integer "38" :radix 16) *instr-tbl*) '("SEC"))
(setf (gethash (parse-integer "39" :radix 16) *instr-tbl*) '("AND" ABSY))
(setf (gethash (parse-integer "3D" :radix 16) *instr-tbl*) '("AND" ABSX))
(setf (gethash (parse-integer "3E" :radix 16) *instr-tbl*) '("ROL" ABSX))
(setf (gethash (parse-integer "40" :radix 16) *instr-tbl*) '("RTI"))
(setf (gethash (parse-integer "41" :radix 16) *instr-tbl*) '("EOR" ZEROX))
(setf (gethash (parse-integer "45" :radix 16) *instr-tbl*) '("EOR" ZERO))
(setf (gethash (parse-integer "46" :radix 16) *instr-tbl*) '("LSR" ZERO))
(setf (gethash (parse-integer "48" :radix 16) *instr-tbl*) '("PHA"))
(setf (gethash (parse-integer "49" :radix 16) *instr-tbl*) '("EOR" IMM))
(setf (gethash (parse-integer "4A" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "4C" :radix 16) *instr-tbl*) '("JMP" ABSL))
(setf (gethash (parse-integer "4D" :radix 16) *instr-tbl*) '("EOR" ABSL))
(setf (gethash (parse-integer "4E" :radix 16) *instr-tbl*) '("LSR" ABSL))
(setf (gethash (parse-integer "50" :radix 16) *instr-tbl*) '("BVC" REL))
(setf (gethash (parse-integer "51" :radix 16) *instr-tbl*) '("EOR" ZERO-Y))
(setf (gethash (parse-integer "55" :radix 16) *instr-tbl*) '("EOR" ZERO-X))
(setf (gethash (parse-integer "56" :radix 16) *instr-tbl*) '("LSR" ZERO-X))
(setf (gethash (parse-integer "58" :radix 16) *instr-tbl*) '("CLI"))
(setf (gethash (parse-integer "59" :radix 16) *instr-tbl*) '("EOR" ABSY))
(setf (gethash (parse-integer "5D" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "5E" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "60" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "61" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "65" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "66" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "68" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "69" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "6A" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "6C" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "6D" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "6E" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "70" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "71" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "75" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "76" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "78" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "79" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "7D" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "7E" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "81" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "84" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "85" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "86" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "88" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "8A" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "8C" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "8D" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "8E" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "90" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "91" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "94" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "95" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "96" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "98" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "99" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "9A" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "9D" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A0" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A1" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A2" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A4" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A5" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A6" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A8" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "A9" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "AA" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "AC" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "AD" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "AE" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B0" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B1" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B4" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B5" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B6" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B8" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "B9" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "BA" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "BC" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "BD" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "BE" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C0" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C1" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C4" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C5" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C6" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C8" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "C9" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "CA" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "CC" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "CD" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "CE" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "D0" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "D1" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "D5" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "D6" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "D8" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "D9" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "DD" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "DE" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E0" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E1" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E4" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E5" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E6" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E8" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "E9" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "EA" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "EC" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "ED" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "EE" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "F0" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "F1" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "F5" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "F6" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "F8" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "F9" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "FD" :radix 16) *instr-tbl*)
(setf (gethash (parse-integer "FE" :radix 16) *instr-tbl*)
















